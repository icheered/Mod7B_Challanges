/**
 * MACChallengeClient.h
 *
 *   Version: 2015-01-14
 *    Author: Jaco ter Braak, University of Twente.
 * Copyright: University of Twente, 2015-2019
 *
 ************************************************************
 *                                                          *
 **                 DO NOT EDIT THIS FILE                  **
 ***         YOU DO NOT HAVE TO LOOK IN THIS FILE         ***
 **** IF YOU HAVE QUESTIONS PLEASE DO ASK A TA FOR HELP  ****
 *****                                                  *****
 ************************************************************
 */

#include <cstdint>

#ifndef IMACPROTOCOL_H_
#define IMACPROTOCOL_H_


enum MediumState {
    Idle, Collision, Success
};

enum TransmissionType {
    Silent, Data, NoData
};

struct TransmissionInfo {
    TransmissionType transmissionType;
    int32_t controlInformation;
};


namespace framework {

    class IMACProtocol {
    public:
        IMACProtocol() {
        }
        virtual ~IMACProtocol() {
        }

        /**
         * The (emulated) physical layer will announce a new timeslot to the protocol by calling this method.
         * @param previousMediumState The state of the medium in the latest timeslot
         * @param controlInformation Control information, if available (when previousMediumState == MediumState::Success). Otherwise undefined.
         * @param localQueueLength The length of the local packet queue.
         * @return TransmissionInfo for the physical layer.
         */
        virtual TransmissionInfo TimeslotAvailable(MediumState previousMediumState, int32_t controlInformation, int localQueueLength) = 0;
    };
}

#endif /* IMACPROTOCOL_H_ */
