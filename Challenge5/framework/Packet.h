/**
 * Packet.h
 *
 *   Version: 2017-03-14
 *    Author: Jaco ter Braak & Frans van Dijk, University of Twente.
 * Copyright: University of Twente, 2015-2019
 *
 ************************************************************
 *                                                          *
 **                 DO NOT EDIT THIS FILE                  **
 ***         YOU DO NOT HAVE TO LOOK IN THIS FILE         ***
 **** IF YOU HAVE QUESTIONS PLEASE DO ASK A TA FOR HELP  ****
 *****                                                  *****
 ************************************************************
 */

#include <cstdint>
#include "DataTable.h"

#ifndef PACKET_H_
#define PACKET_H_

namespace framework {

    class Packet {

    public:
        /**
         * Instantiates a new packet with a DataTable as data.
         * @param sourceAddress int
         * @param destinationAddress int
         * @param dataTable1 a DataTable object. Can be a DataTable object with 0 columns, to represent no data.
         */
        Packet(int32_t sourceAddress, int32_t destinationAddress, DataTable* dataTable1);
        /**
         * Instantiates a new packet with a std::vector<unsigned char> as data.
         * @param sourceAddress int
         * @param destinationAddress int
         * @param rawData a std::vector<unsigned char>.
         */
        Packet(int32_t sourceAddress, int32_t destinationAddress, std::vector<unsigned char> rawData);
        virtual ~Packet();
        int32_t getSourceAddress();
        int32_t getDestinationAddress();
        /**
         * Gets the DataTable if this is not a raw packet.
         * @return the DataTable data if not isRaw(); otherwise nullptr
         */
        DataTable *getDataTable();
        /**
         * Gets the std::vector<unsigned char> data if this is a raw packet.
         * @return the std::vector<unsigned char> data if isRaw(); otherwise unspecified
         */
        std::vector<unsigned char> getRawData();
        /**
         * Indicates if this a raw packet or if it has a DataTable as data.
         * @return true if this is a raw packet; false otherwise.
         */
        bool isRaw();
    private:
        int32_t sourceAddress;
        int32_t destinationAddress;
        DataTable* dataTable;
        std::vector<unsigned char> rawData;
        bool b_isRaw;
    };

} /* namespace framework */

#endif /* PACKET_H_ */
